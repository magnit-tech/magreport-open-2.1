import { LRParser } from '@lezer/lr';
import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: "%jOYQPOOOYQPO'#CoQqQPOOOOQO'#Cr'#CrOYQPO'#CeO!PQQO'#CwO!UQQO'#C{OOQO'#Ci'#CiO!ZQPO'#ChOOQO'#Cn'#CnO!`QPO,59ZOYQPO,58{OYQPO,58|OYQPO,58}OYQPO,59OOOQO,59P,59POOQO'#Cf'#CfO!qQPO,59cOOQO'#Cg'#CgO!vQQO,59gO!{QPO,59SOOQO1G.u1G.uOOQO1G.g1G.gOOQO1G.h1G.hO#SQPO1G.iO#kQPO1G.jOOQO1G.}1G.}OOQO1G/R1G/RO$SQPO'#DPO$hQPO1G.nO$mQPO'#CjO$wQPO,59kOOQO7+$Y7+$YO%PQPO,59UOOQO-E6h-E6h",
  stateData: "%e~OaOSPOS~ORXOSXOdPOjSOlTOpUOrVO~OgZOh[Oi]Oj^O~Om`O~OmbO~OddO~OeeOgZOh[Oi]Oj^O~OnjO~OqkO~OesP~PYOgZOh[O_ViiVijVieVitVi~OgZOh[O_WiiWijWieWitWi~OgZOh[Oi]Oj^OtnOesX~OepO~Oe^Xt^X~PYOtnOesa~OgZOh[Oi]Oj^Oe^at^a~O",
  goto: "#dtPPPPPuuuu!Q!]!`!Q!c!nPPP!t!QPP!QPPPP!QPPP!QPPP#acROPSZ[]^dncXOPSZ[]^dnRaTRcUcWOPSZ[]^dnQolRroQQOQYPQ_SQfZQg[Qh]Qi^QldRqnRmd",
  nodeNames: "âš  LineComment Formula String Number Product Fraction Sum Subtraction UnaryMinus OriginalFieldName DerivedFieldName FunctionCallExpression FunctionName",
  maxTerm: 36,
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: ">u~RqOX#YXY%OYZ%OZ]#Y]^%O^p#Ypq%Oqr#Yrs%ast.ytx#Yxy/byz0[z{1U{|2O|}2x}!O3r!O!P4l!P!Q:h!Q![;b![!]#Y!^!c#Y!c!}<z!}#O>Z#O#P#Y#P#Q>h#Q#R#Y#R#S<z#S#T#Y#T#o<z#o;'S#Y;'S;=`$x<%lO#YQ#_ZmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YQ$VXmQOX$QZ]$Q^s$Qt!]$Q!^!}$Q#O#P$Q#Q;'S$Q;'S;=`$r<%lO$QQ$uP;=`<%l$QQ${P;=`<%l#Y~%TSa~XY%OYZ%O]^%Opq%OR%fbmQOX%aXZ&nZ]%a]^&n^p%apq([qr%ars,Pst&nt!]%a!]!^&n!^!}%a!}#O&n#O#P,y#P#Q&n#Q;'S%a;'S;=`.s<%lO%aP&qVOr&nrs'Ws#O&n#O#P']#P;'S&n;'S;=`(U<%lO&nP']ORPP'`RO;'S&n;'S;=`'i;=`O&nP'lWOr&nrs'Ws#O&n#O#P']#P;'S&n;'S;=`(U;=`<%l&n<%lO&nP(XP;=`<%l&nR(a`mQOX([XZ&nZ]([]^&n^r([rs)cst&nt!]([!]!^&n!^!}([!}#O&n#O#P*V#P#Q&n#Q;'S([;'S;=`+y<%lO([R)jXRPmQOX$QZ]$Q^s$Qt!]$Q!^!}$Q#O#P$Q#Q;'S$Q;'S;=`$r<%lO$QR*[`mQOX([XZ&nZ]([]^&n^s([st&nt!]([!]!^&n!^!}([!}#O&n#O#P([#P#Q&n#Q;'S([;'S;=`+^;=`<%l&n<%lO([R+aWOr&nrs'Ws#O&n#O#P']#P;'S&n;'S;=`(U;=`<%l([<%lO&nR+|P;=`<%l([R,WZRPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR-ObmQOX%aXZ&nZ]%a]^&n^p%apq([qs%ast&nt!]%a!]!^&n!^!}%a!}#O&n#O#P%a#P#Q&n#Q;'S%a;'S;=`.W;=`<%l&n<%lO%aR.ZWOr&nrs'Ws#O&n#O#P']#P;'S&n;'S;=`(U;=`<%l%a<%lO&nR.vP;=`<%l%a~/OSP~OY.yZ;'S.y;'S;=`/[<%lO.y~/_P;=`<%l.yR/iZdPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR0cZePmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR1]ZgPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR2VZiPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR3PZtPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR3yZjPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR4q]mQOX#YZ]#Y^p#Ypq$Qqs#Yt!Q#Y!Q![5j![!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR5qcSPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!Q#Y!Q![5j![!]#Y!^!g#Y!g!h6|!h!}#Y#O#P#Y#Q#R#Y#R#S5j#S#X#Y#X#Y6|#Y;'S#Y;'S;=`$x<%lO#YR7RcmQOX#YZ]#Y^p#Ypq$Qqs#Yt{#Y{|8^|}#Y}!O8^!O!Q#Y!Q![9b![!]#Y!^!}#Y#O#P#Y#Q#R#Y#R#S9b#S;'S#Y;'S;=`$x<%lO#YR8c_mQOX#YZ]#Y^p#Ypq$Qqs#Yt!Q#Y!Q![9b![!]#Y!^!}#Y#O#P#Y#Q#R#Y#R#S9b#S;'S#Y;'S;=`$x<%lO#YR9i_SPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!Q#Y!Q![9b![!]#Y!^!}#Y#O#P#Y#Q#R#Y#R#S9b#S;'S#Y;'S;=`$x<%lO#YR:oZhPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!]#Y!^!}#Y#O#P#Y#Q;'S#Y;'S;=`$x<%lO#YR;ieSPmQOX#YZ]#Y^p#Ypq$Qqs#Yt!O#Y!O!P5j!P!Q#Y!Q![;b![!]#Y!^!g#Y!g!h6|!h!}#Y#O#P#Y#Q#R#Y#R#S;b#S#X#Y#X#Y6|#Y;'S#Y;'S;=`$x<%lO#YR=RbmQrPOX#YZ]#Y^p#Ypq$Qqs#Yt!Q#Y!Q![<z![!]#Y!^!c#Y!c!}<z#O#P#Y#Q#R#Y#R#S<z#S#T#Y#T#o<z#o;'S#Y;'S;=`$x<%lO#Y~>`Pl~!}#O>c~>hOp~R>mPnP#P#Q>pQ>uOqQ",
  tokenizers: [0, 1],
  topRules: {"Formula":[0,2]},
  tokenPrec: 0
});

const MagreportLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            styleTags({
                OriginalFieldName: tags.variableName,
                DerivedFieldName: tags.propertyName,
                FunctionName: tags.function(tags.variableName),
                String: tags.string,
                LineComment: tags.lineComment,
                "( )": tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function MagLang() {
    return new LanguageSupport(MagreportLanguage);
}

export { MagLang, MagreportLanguage };
